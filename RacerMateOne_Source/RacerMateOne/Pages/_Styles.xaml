<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:sys="clr-namespace:System;assembly=mscorlib"
	xmlns:dw="clr-namespace:RacerMateOne"
	>

	<DrawingBrush x:Key="DashLine"  Viewport="0,0,10,10" TileMode="tile" Stretch="Uniform" ViewportUnits="Absolute" >
		<DrawingBrush.Drawing>
			<GeometryDrawing Geometry="M 0,0 L 1,1 L 0,2">
				<GeometryDrawing.Pen>
					<Pen Thickness="0.1" Brush="Red"/>
				</GeometryDrawing.Pen>
			</GeometryDrawing>
		</DrawingBrush.Drawing>
	</DrawingBrush>

	<dw:RadioBoolToStringConverter x:Key="radioBoolToStringConverter" />
	
	<!-- 3D Styles -->
	<Style x:Key="StatCell3D" TargetType="{x:Type StackPanel}">
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Margin" Value="1,0,1,0"/>
	</Style>
	<Style x:Key="StatHeaderLabel3D" TargetType="{x:Type Label}">
		<Setter Property="FontFamily" Value="Arial" />
		<Setter Property="FontWeight" Value="Bold"/>
		<Setter Property="FontSize" Value="16" />
		<Setter Property="Foreground" Value="White" />
		<Setter Property="Padding" Value="8,0,8,0"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
	</Style>
	<Style x:Key="StatLabel3D" TargetType="{x:Type Label}">
		<Setter Property="FontFamily" Value="Arial" />
		<Setter Property="FontSize" Value="16" />
		<Setter Property="Foreground" Value="White" />
		<Setter Property="Padding" Value="8,4,8,0"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
	</Style>
	<Style x:Key="Border3D" TargetType="{x:Type Border}">
		<Setter Property="CornerRadius" Value="10"/>
		<Setter Property="Background" Value="#99000000"/>
		<Setter Property="Effect">
			<Setter.Value>
				<BlurEffect Radius="5" />
			</Setter.Value>
		</Setter>
	</Style>
	

	<!-- Logo -->
	<Style x:Key="LogoImage" TargetType="{x:Type Image}">
		<Setter Property="Width" Value="194px"/>
		<Setter Property="Height" Value="55px"/>
		<Setter Property="Source" Value="/RacerMateOne;component/Resources/RacerMateOne-Logo.png"/>
		<Setter Property="Stretch" Value="Fill"/>
		<Setter Property="VerticalAlignment" Value="Top"/>
		<Setter Property="HorizontalAlignment" Value="Left"/>
		<Setter Property="Margin" Value="9,12,0,0"/>
	</Style>
	<Style x:Key="TopLine" TargetType="{x:Type Label}">
		<Setter Property="VerticalAlignment" Value="Top"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="Margin" Value="0,12,0,0"/>
		<Setter Property="FontFamily" Value="Arial" />
		<Setter Property="FontSize" Value="50" />
		<Setter Property="Foreground" Value="#1E3966" />
		<Setter Property="Padding" Value="0"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="BitmapEffect">
			<Setter.Value>
				<OuterGlowBitmapEffect GlowColor="White" Opacity="4" GlowSize="6"/>
			</Setter.Value>
		</Setter>
		<Setter Property="Height" Value="60"/>
	</Style>
	<Style x:Key="Branding" TargetType="{x:Type Image}">
		<Setter Property="Source" Value="pack://application:,,,/Art/Training Gym Logo/GymLogo-170x70.png"/>
		<Setter Property="Width" Value="170"/>
		<Setter Property="Height" Value="70"/>
		<Setter Property="HorizontalAlignment" Value="Right"/>
		<Setter Property="VerticalAlignment" Value="Top" />
		<Setter Property="Margin" Value="0,12,9,0"/>
	</Style>
	
	
	<!-- Setup -->
	<Style x:Key="Setup_Border" TargetType="{x:Type Border}">
		<Setter Property="Margin" Value="12,87,12,61"/>
		<Setter Property="Background" Value="#FF8FB7D3"/>
		<Setter Property="CornerRadius" Value="30"/>
	</Style>
	<Style x:Key="DivLine" TargetType="{x:Type Line}">
		<Setter Property="Stroke" Value="#FF8FB7D3"/>
		<Setter Property="Y1" Value="0"/>
		<Setter Property="Y2" Value="23"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Margin" Value="2,0,2,0"/>
	</Style>


	<Style x:Key="BikeIcon" TargetType="{x:Type Image}">
		<Setter Property="Source" Value="/RacerMateOne;component/Resources/BikeIcon.png"/>
		<Setter Property="Stretch" Value="Fill"/>
		<Setter Property="HorizontalAlignment" Value="Left"/>
		<Setter Property="VerticalAlignment" Value="Top"/>
		<Setter Property="Width" Value="31px"/>
		<Setter Property="Height" Value="20px"/>
	</Style>

	<!-- Labels -->
    <Style TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="White" />
    </Style>
    <Style x:Key="NoteLabel" TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Foreground" Value="White" />
    </Style>
	<Style x:Key="CCLabel" TargetType="{x:Type Label}">
		<Setter Property="FontFamily" Value="Arial" />
		<Setter Property="FontSize" Value="12" />
		<Setter Property="Foreground" Value="White" />
		<Setter Property="Padding" Value="0"/>
	</Style>
	<Style x:Key="CCTableLabel" TargetType="{x:Type Label}">
		<Setter Property="FontFamily" Value="Arial" />
		<Setter Property="FontSize" Value="12" />
		<Setter Property="Foreground" Value="White" />
		<Setter Property="Padding" Value="0"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
	</Style>
	<Style x:Key="CCLineLabel" TargetType="{x:Type Label}">
		<Setter Property="FontFamily" Value="Arial" />
		<Setter Property="FontSize" Value="12" />
		<Setter Property="Foreground" Value="#FF266388" />
		<Setter Property="Padding" Value="0"/>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
	</Style>
	<Style x:Key="SubNoteLabel" TargetType="{x:Type Label}">
		<Setter Property="FontFamily" Value="Arial" />
		<Setter Property="FontSize" Value="10" />
		<Setter Property="Foreground" Value="LightBlue" />
	</Style>
	<Style x:Key="NoteLabel_Large" TargetType="{x:Type Label}">
		<Setter Property="FontFamily" Value="Arial" />
		<Setter Property="FontSize" Value="14" />
		<Setter Property="Foreground" Value="White" />
	</Style>
	<Style x:Key="HeaderLabel" TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontSize" Value="18" />
		<Setter Property="Foreground" Value="White" />
        <!-- <Setter Property="Foreground" Value="#FF266388" /> -->
        <Setter Property="Padding" Value="0"/>
    </Style>
    <Style x:Key="HeaderSmallLabel" TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Foreground" Value="#FF266388" />
        <Setter Property="Padding" Value="0"/>
    </Style>
	<Style x:Key="SSLabel" TargetType="{x:Type Label}">
		<Setter Property="FontFamily" Value="Arial" />
		<Setter Property="FontSize" Value="30" />
		<Setter Property="Foreground" Value="White" />
		<Setter Property="Padding" Value="6,5,6,5"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
	</Style>
	<Style x:Key="PBLabel" TargetType="{x:Type Label}">
		<Setter Property="FontFamily" Value="Arial" />
		<Setter Property="FontSize" Value="18" />
		<Setter Property="Foreground" Value="White" />
		<Setter Property="Padding" Value="6,3,6,3"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
	</Style>
	<Style x:Key="PBStatLabel" TargetType="{x:Type Label}">
		<Setter Property="FontFamily" Value="Arial" />
		<Setter Property="FontSize" Value="18" />
		<Setter Property="Foreground" Value="#FF266388" />
		<Setter Property="Padding" Value="0,3,0,3"/>
		<Setter Property="HorizontalContentAlignment" Value="Right"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
	</Style>
	<Style x:Key="GraphLabel" TargetType="{x:Type Label}">
		<Setter Property="FontFamily" Value="Arial" />
		<Setter Property="FontSize" Value="16" />
		<Setter Property="Foreground" Value="White" />
		<Setter Property="Padding" Value="0,1,0,1"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
	</Style>
	<Style x:Key="GraphLine" TargetType="{x:Type Line}">
		<Setter Property="Stroke" Value="#60FFFFFF"/>
		<Setter Property="X1" Value="0"/>
		<Setter Property="X2" Value="20"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>

	<Style x:Key="StatHeaderLabel" TargetType="{x:Type Label}">
		<Setter Property="FontFamily" Value="Arial" />
		<Setter Property="FontWeight" Value="Bold"/>
		<Setter Property="FontSize" Value="10" />
		<Setter Property="Foreground" Value="#FF266388" />
		<Setter Property="Padding" Value="6,0,6,0"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
	</Style>
	<Style x:Key="StatLabel" TargetType="{x:Type Label}">
		<Setter Property="FontFamily" Value="Arial" />
		<Setter Property="FontSize" Value="10" />
		<Setter Property="Foreground" Value="#FF266388" />
		<Setter Property="Padding" Value="6,4,6,0"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
	</Style>
	<Style x:Key="StatCell" TargetType="{x:Type StackPanel}">
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>
	<Style x:Key="DisplayLabel" TargetType="{x:Type Label}">
		<Setter Property="FontFamily" Value="Arial" />
		<Setter Property="FontSize" Value="16" />
		<Setter Property="Foreground" Value="#FF266388" />
		<Setter Property="Padding" Value="0,0,0,0"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
	</Style>

	<Style x:Key="RideLabel" TargetType="{x:Type Label}">
		<Setter Property="HorizontalAlignment" Value="Right"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Padding" Value="0"/>
		<Setter Property="FontFamily" Value="Arial" />
		<Setter Property="FontSize" Value="20" />
		<Setter Property="Foreground" Value="#FFFFF637" />
		<Setter Property="HorizontalContentAlignment" Value="Right"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Effect">
			<Setter.Value>
				<DropShadowEffect Direction="315" Opacity="0.45" ShadowDepth="4"/>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="RideStat" TargetType="{x:Type Label}">
		<Setter Property="HorizontalAlignment" Value="Right"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Padding" Value="0"/>
		<Setter Property="FontFamily" Value="Arial" />
		<Setter Property="FontSize" Value="20" />
		<Setter Property="Foreground" Value="White" />
		<Setter Property="HorizontalContentAlignment" Value="Right"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Effect">
			<Setter.Value>
				<DropShadowEffect Direction="315" Opacity="0.45" ShadowDepth="4"/>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="TimerLabel" TargetType="{x:Type Label}">
		<Setter Property="HorizontalAlignment" Value="Right"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Padding" Value="0"/>
		<Setter Property="FontFamily" Value="Arial" />
		<Setter Property="FontSize" Value="30" />
		<Setter Property="Foreground" Value="White" />
	</Style>

	<Style x:Key="LBLabel" TargetType="{x:Type Label}">
		<Setter Property="Padding" Value="0"/>
		<Setter Property="FontFamily" Value="Arial" />
		<Setter Property="FontSize" Value="16" />
		<Setter Property="Foreground" Value="#FF266388" />
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>

	<!-- Tooltip -->
	<Style x:Key="ToolTip_Text" TargetType="{x:Type TextBlock}">
		<Setter Property="FontFamily" Value="Arial" />
		<Setter Property="Padding" Value="0"/>
		<Setter Property="FontSize" Value="14" />
		<Setter Property="Foreground" Value="#FF266388" />
		<Setter Property="TextWrapping" Value="Wrap"/>
	</Style>
	
	<Style x:Key="PBBox" TargetType="{x:Type Border}">
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Background" Value="#FF999999"/>
		<Setter Property="BorderBrush" Value="White"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Width" Value="15px"/>
		<Setter Property="Height" Value="15px"/>
	</Style>

	<!-- ScrollBar Parts -->
    <Style x:Key="ScrollBar_Track" TargetType="{x:Type RepeatButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid></Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBar_VerticalThumb" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2px" />
                            <ColumnDefinition Width="1px" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="1px" />
                            <ColumnDefinition Width="2px" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="2px" />
                            <RowDefinition Height="50*" />
                            <RowDefinition Height="50*" />
                            <RowDefinition Height="2px" />
                        </Grid.RowDefinitions>
                        <Border CornerRadius="8,8,8,8" Grid.Column="1" Grid.ColumnSpan="3" Grid.Row="1" Grid.RowSpan="2" Margin="0,0,0,0" >
                            <Border.Background>
                                <RadialGradientBrush RadiusY="0.75">
                                    <GradientStop Color="#FFA5C5DC" Offset="0.0" />
                                    <GradientStop Color="#FF76A7CA" Offset="1.0" />
                                </RadialGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border CornerRadius="7,7,7,7" VerticalAlignment="Top" Height="30" BorderThickness="1" Grid.Column="2" Grid.Row="1" Grid.RowSpan="1" Margin="0,1,0,0">
                            <Border.Background>
                                <LinearGradientBrush >
                                    <GradientStop Color="White" Offset="0.0" />
                                    <GradientStop Color="#00FFFFFF" Offset="1.0" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBar_HorizontalThumb" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="2px" />
                            <RowDefinition Height="1px" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="1px" />
                            <RowDefinition Height="2px" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2px" />
                            <ColumnDefinition Width="50*" />
                            <ColumnDefinition Width="50*" />
                            <ColumnDefinition Width="2px" />
                        </Grid.ColumnDefinitions>
                        <Border CornerRadius="8,8,8,8" Grid.Row="1" Grid.RowSpan="3" Grid.Column="1" Grid.ColumnSpan="2" Margin="0,0,0,0" >
                            <Border.Background>
                                <RadialGradientBrush RadiusX="0.75">
                                    <GradientStop Color="#FFA5C5DC" Offset="0.0" />
                                    <GradientStop Color="#FF76A7CA" Offset="1.0" />
                                </RadialGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border CornerRadius="7,7,7,7" BorderThickness="1" Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="1" Margin="0,1,0,0">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5" >
                                    <GradientStop Color="White" Offset="0.0" />
                                    <GradientStop Color="#00FFFFFF" Offset="1.0" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- ScrollBar -->
    <Style x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Setter Property="Width" Value="20"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid Width="20">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="2px" />
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="2px" />
                        </Grid.RowDefinitions>
                        <Border Grid.Row="1" BorderThickness="0" Background="#FFDCE6EC" CornerRadius="10"/>
                        <!--<RepeatButton Visibility="Hidden" Grid.Row="0" Style="{DynamicResource Scrollbar_LineButton}" Command="ScrollBar.LineUpCommand" Content=" ^" />-->
                        <RepeatButton Visibility="Hidden" Grid.Row="0" Command="ScrollBar.LineUpCommand" Content=" ^" />
                        <!--IsDirectionReversed set to true draws a ScrollBar with a 
                            Track whose lowest value is at the bottom.
                            The default orientation of a ScrollBar is for the Track
                            values to decrease from top to bottom.-->
                        <Track Grid.Row="1" Name="PART_Track" IsDirectionReversed="true">
							<Track.Resources>
								<!-- Thumb's minimum height is half of this metric -->
								<sys:Double x:Key="{x:Static SystemParameters.VerticalScrollBarButtonHeightKey}">
									68
								</sys:Double>
							</Track.Resources>
							<Track.DecreaseRepeatButton>
                                <RepeatButton Style="{DynamicResource ScrollBar_Track}" Command="Slider.DecreaseLarge"/>
                            </Track.DecreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{DynamicResource ScrollBar_VerticalThumb}"/>
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Style="{DynamicResource ScrollBar_Track}" Command="Slider.IncreaseLarge"/>
                            </Track.IncreaseRepeatButton>
                        </Track>
                        <!--<RepeatButton Visibility="Hidden" Grid.Row="2" Style="{DynamicResource Scrollbar_LineButton}" Command="ScrollBar.LineDownCommand" Content=" v" />-->
                        <RepeatButton Visibility="Hidden" Grid.Row="2" Command="ScrollBar.LineDownCommand" Content=" v" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Setter Property="Height" Value="20"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid Height="20">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="20"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2px" />
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="2px" />
                        </Grid.ColumnDefinitions>
                        <Border Grid.Column="1" BorderThickness="0" Background="#FFDCE6EC" CornerRadius="10"/>
                        <!--<RepeatButton Visibility="Hidden" Grid.Column="0" Style="{DynamicResource Scrollbar_LineButton}" Command="ScrollBar.LineUpCommand" Content=" ^" />-->
                        <RepeatButton Visibility="Hidden" Grid.Column="0" Command="ScrollBar.LineUpCommand" Content=" ^" />

                        <!--IsDirectionReversed set to true draws a ScrollBar with a 
                            Track whose lowest value is at the bottom.
                            The default orientation of a ScrollBar is for the Track
                            values to decrease from top to bottom.-->
                        <Track Grid.Column="1" Name="PART_Track" IsDirectionReversed="true">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Style="{DynamicResource ScrollBar_Track}" Command="Slider.DecreaseLarge"/>
                            </Track.DecreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{DynamicResource ScrollBar_HorizontalThumb}"/>
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Style="{DynamicResource ScrollBar_Track}"  Command="Slider.IncreaseLarge"/>
                            </Track.IncreaseRepeatButton>
                        </Track>
                        <!--<RepeatButton Visibility="Hidden" Grid.Column="2" Style="{DynamicResource Scrollbar_LineButton}" Command="ScrollBar.LineDownCommand" Content=" v" />-->
                        <RepeatButton Visibility="Hidden" Grid.Column="2" Command="ScrollBar.LineDownCommand" Content=" v" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ListBoxItem -->
	<Style TargetType="{x:Type ListBoxItem}">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="HorizontalContentAlignment" 
                Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource 
                AncestorType={x:Type ItemsControl}}}"/>
		<Setter Property="VerticalContentAlignment" 
                Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
		<Setter Property="Padding" Value="8px,0,3px,0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBoxItem}">
					<Grid>
						<Border Margin="3px,2px,5px,2px" SnapsToDevicePixels="true" x:Name="Bd" Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                Padding="{TemplateBinding Padding}">
							<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Border>
						<Path Margin="3px,0,5px,0" Data="M 0,0 L 50,0" Stroke="#FF8FB7D3" StrokeThickness="0.5" StrokeDashArray="2,2" Stretch="Uniform" VerticalAlignment="Bottom"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsSelected" Value="true">
							<Setter Property="Background" Value="#FFB5CFE1" TargetName="Bd"/>
							<Setter Property="Foreground" Value="#FF266388" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true"/>
								<Condition Property="Selector.IsSelectionActive" Value="false"/>
							</MultiTrigger.Conditions>
							<Setter Property="Background" TargetName="Bd"
                                    Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="DeviceContainerStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" 
                Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource 
                AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" 
                Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding" Value="8px,0,3px,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid>
                        <Border Margin="3px,2px,5px,2px" SnapsToDevicePixels="true" x:Name="Bd" Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <Path Margin="3px,0,5px,0" Data="M 0,0 L 50,0" Stroke="#FF8FB7D3" StrokeThickness="0.5" StrokeDashArray="2,2" Stretch="Uniform" VerticalAlignment="Bottom"/>
                    </Grid>                        
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" Value="#FFFFCCFF" TargetName="Bd"/>
                            <Setter Property="Foreground" Value="#FF266388" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="Selector.IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd"
                                    Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	<Style x:Key="ListBoxItemSquare" TargetType="{x:Type ListBoxItem}">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="HorizontalContentAlignment" 
                Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource 
                AncestorType={x:Type ItemsControl}}}"/>
		<Setter Property="VerticalContentAlignment" 
                Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
		<Setter Property="Padding" Value="8px,0,3px,0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBoxItem}">
					<Grid>
						<Border Margin="0" SnapsToDevicePixels="true" x:Name="Bd" Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                Padding="{TemplateBinding Padding}">
							<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsSelected" Value="true">
							<Setter Property="Background" Value="#FFFFCCFF" TargetName="Bd"/>
							<Setter Property="Foreground" Value="#FF266388" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true"/>
								<Condition Property="Selector.IsSelectionActive" Value="false"/>
							</MultiTrigger.Conditions>
							<Setter Property="Background" TargetName="Bd"
                                    Value="#FFFFCCFF"/>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Listbox -->
    <Style TargetType="{x:Type ListBox}">
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="#FF266388" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border CornerRadius="14" BorderThickness="1" BorderBrush="#FF326D91" Background="{TemplateBinding ListBox.Background}">
                        <Grid>
                            <ScrollViewer Margin="3,2,3,2">
                                <ItemsPresenter/>
                            </ScrollViewer>                            
                        </Grid>                            
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	<Style x:Key="ListBoxSquare" TargetType="{x:Type ListBox}">
		<Setter Property="FontFamily" Value="Arial" />
		<Setter Property="FontSize" Value="16" />
		<Setter Property="Foreground" Value="#FF266388" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBox}">
					<Border BorderThickness="1" BorderBrush="#FF326D91" Background="{TemplateBinding ListBox.Background}">
						<Grid>
							<ScrollViewer Margin="0">
								<ItemsPresenter/>
							</ScrollViewer>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- ListViewItem -->
    <Style x:Key="HiddenHeader" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="Visibility" Value="Collapsed" />
    </Style>
    <!--<Style TargetType="{x:Type ListViewItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" 
                Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource 
                AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" 
                Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding" Value="8px,0,3px,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Grid>
                        <Border Margin="3px,2px,5px,2px" SnapsToDevicePixels="true" x:Name="Bd" Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <Path Margin="3px,0,5px,0" Data="M 0,0 L 50,0" Stroke="#FF8FB7D3" StrokeThickness="0.5" StrokeDashArray="2,2" Stretch="Uniform" VerticalAlignment="Bottom"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" Value="#FFFFCCFF" TargetName="Bd"/>
                            <Setter Property="Foreground" Value="#FF266388" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="Selector.IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd"
                                    Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!-- ScrollViewer -->
    <Style TargetType="{x:Type ScrollViewer}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <ScrollContentPresenter/>

                        <ScrollBar Style="{DynamicResource VerticalScrollBar}" Name="PART_VerticalScrollBar"
                            Grid.Column="1"
                            Value="{TemplateBinding VerticalOffset}"
                            Maximum="{TemplateBinding ScrollableHeight}"
                            ViewportSize="{TemplateBinding ViewportHeight}"
                            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                        <ScrollBar Style="{DynamicResource HorizontalScrollBar}" Name="PART_HorizontalScrollBar"
                            Orientation="Horizontal"
                            Grid.Row="1"
                            Value="{TemplateBinding HorizontalOffset}"
                            Maximum="{TemplateBinding ScrollableWidth}"
                            ViewportSize="{TemplateBinding ViewportWidth}"
                            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ListView -->
    <!--<Style TargetType="{x:Type ListView}">
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="#FF266388" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <Border CornerRadius="14" BorderThickness="1" BorderBrush="#FF326D91" Background="{TemplateBinding ListView.Background}">
                        <Grid>
                            <ScrollViewer Margin="3,2,3,2">
                                <ItemsPresenter/>
                            </ScrollViewer>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->


    <!-- Checkbox -->
    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <StackPanel Orientation="Horizontal" >
                                <Grid Width="16" Height="16">
                                    <Rectangle x:Name="MainBox" Width="16" Height="16" Fill="White" Stroke="#FF326D91"/>
                                    <Rectangle Margin="4,4,4,4"  Fill="White" Width="Auto" Height="Auto"/>
                                    <Rectangle x:Name="Selected" Margin="4,4,4,4" Fill="#FF326D91"  Width="Auto" Height="Auto"/>
                                </Grid>
                                <ContentPresenter Margin="5,0,0,0" VerticalAlignment="Center"/>
                            </StackPanel>
                        </BulletDecorator.Bullet>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="MainBox" Property="Fill" Value="LightBlue"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="Selected" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

	<Style x:Key="SmallCheckBox" TargetType="{x:Type CheckBox}">
		<Setter Property="FontFamily" Value="Arial" />
		<Setter Property="FontSize" Value="14" />
		<Setter Property="Foreground" Value="White" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type CheckBox}">
					<BulletDecorator Background="Transparent">
						<BulletDecorator.Bullet>
							<StackPanel Orientation="Horizontal" >
								<Grid Width="14" Height="14">
									<Rectangle x:Name="MainBox" Width="14" Height="14" Fill="White" Stroke="#FF326D91"/>
									<Rectangle Margin="4,4,4,4"  Fill="White" Width="Auto" Height="Auto"/>
									<Rectangle x:Name="Selected" Margin="4,4,4,4" Fill="#FF326D91"  Width="Auto" Height="Auto"/>
								</Grid>
								<ContentPresenter Margin="5,0,0,0" VerticalAlignment="Center"/>
							</StackPanel>
						</BulletDecorator.Bullet>
					</BulletDecorator>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="MainBox" Property="Fill" Value="LightBlue"/>
						</Trigger>
						<Trigger Property="IsChecked" Value="false">
							<Setter TargetName="Selected" Property="Visibility" Value="Collapsed"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- RadioButton -->
    <Style TargetType="{x:Type RadioButton}">
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <StackPanel Orientation="Horizontal" >
                                <Grid Width="20" Height="20">
                                    <Ellipse Name="MainEllipse" Width="20" Height="20" Fill="White" Stroke="#FF326D91"/>
                                    <Ellipse Margin="4,4,4,4"  Fill="White" Width="Auto" Height="Auto"/>
                                    <Ellipse x:Name="Selected" Margin="4,4,4,4" Fill="#FF326D91"  Width="Auto" Height="Auto"/>
                                </Grid>
                                <ContentPresenter Margin="5,0,0,0" VerticalAlignment="Center"/>
                            </StackPanel>
                        </BulletDecorator.Bullet>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="MainEllipse" Property="Fill" Value="LightBlue"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="Selected" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	<Style x:Key="SmallRadioButton" TargetType="{x:Type RadioButton}">
		<Setter Property="FontFamily" Value="Arial" />
		<Setter Property="FontSize" Value="16" />
		<Setter Property="Foreground" Value="White" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RadioButton}">
					<BulletDecorator Background="Transparent">
						<BulletDecorator.Bullet>
							<StackPanel Orientation="Horizontal" >
								<Grid Width="14" Height="14">
									<Ellipse Name="MainEllipse" Width="14" Height="14" Fill="White" Stroke="#FF326D91"/>
									<Ellipse Margin="2,2,2,2"  Fill="White" Width="Auto" Height="Auto"/>
									<Ellipse x:Name="Selected" Margin="2,2,2,2" Fill="#FF326D91"  Width="Auto" Height="Auto"/>
								</Grid>
								<ContentPresenter Margin="5,0,0,0" VerticalAlignment="Center"/>
							</StackPanel>
						</BulletDecorator.Bullet>
					</BulletDecorator>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="MainEllipse" Property="Fill" Value="LightBlue"/>
						</Trigger>
						<Trigger Property="IsChecked" Value="false">
							<Setter TargetName="Selected" Property="Visibility" Value="Collapsed"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- ComboBox -->
    <LinearGradientBrush x:Key="NormalBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF" Offset="0.0"/>
                <GradientStop Color="#CCC" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="HorizontalNormalBrush" StartPoint="0,0" EndPoint="1,0">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF" Offset="0.0"/>
                <GradientStop Color="#CCC" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="LightBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF" Offset="0.0"/>
                <GradientStop Color="#EEE" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="HorizontalLightBrush" StartPoint="0,0" EndPoint="1,0">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF" Offset="0.0"/>
                <GradientStop Color="#EEE" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#BBB" Offset="0.0"/>
                <GradientStop Color="#EEE" Offset="0.1"/>
                <GradientStop Color="#EEE" Offset="0.9"/>
                <GradientStop Color="#FFF" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />

    <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />

    <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#FFF" />

    <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#DDD" />

    <!-- Border Brushes -->

    <LinearGradientBrush x:Key="NormalBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#CCC" Offset="0.0"/>
                <GradientStop Color="#444" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="HorizontalNormalBorderBrush" StartPoint="0,0" EndPoint="1,0">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#CCC" Offset="0.0"/>
                <GradientStop Color="#444" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="DefaultedBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#777" Offset="0.0"/>
                <GradientStop Color="#000" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="PressedBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#444" Offset="0.0"/>
                <GradientStop Color="#888" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />

    <SolidColorBrush x:Key="SolidBorderBrush" Color="#888" />

    <SolidColorBrush x:Key="LightBorderBrush" Color="#AAA" />

    <!-- Miscellaneous Brushes -->
    <SolidColorBrush x:Key="GlyphBrush" Color="#444" />

    <SolidColorBrush x:Key="LightColorBrush" Color="#DDD" />

	<LinearGradientBrush x:Key="CB_Over" StartPoint="0,0" EndPoint="0,1">
		<GradientBrush.GradientStops>
			<GradientStopCollection>
				<GradientStop Color="#FFE7F5FD" Offset="0.0"/>
				<GradientStop Color="#FFDEF2FC" Offset="0.5"/>
				<GradientStop Color="#FFBCF5EC" Offset="0.51"/>
				<GradientStop Color="#AADBF6" Offset="1.0"/>
			</GradientStopCollection>
		</GradientBrush.GradientStops>
	</LinearGradientBrush>

	<LinearGradientBrush x:Key="CB_Down" StartPoint="0,0" EndPoint="0,1">
		<GradientBrush.GradientStops>
			<GradientStopCollection>
				<GradientStop Color="#BBB" Offset="0.0"/>
				<GradientStop Color="#C2E4F6" Offset="0.05"/>
				<GradientStop Color="#C2E4F6" Offset="0.5"/>
				<GradientStop Color="#A6D8F2" Offset="0.51"/>
				<GradientStop Color="#91CCEB" Offset="1"/>
			</GradientStopCollection>
		</GradientBrush.GradientStops>
	</LinearGradientBrush>


	<ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="15" />
            </Grid.ColumnDefinitions>
            <Border
                  x:Name="Border" 
                  Grid.ColumnSpan="2"
                  CornerRadius="2"
                  Background="White"
                  BorderBrush="#FF326D91"
                  BorderThickness="1" />
            <Path 
                  x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="{StaticResource GlyphBrush}"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M 0 0 L 4 4 L 8 0 Z"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource CB_Over}" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource CB_Down}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource DisabledForegroundBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>

	<Style x:Key="Original" TargetType="ComboBox">
		<Setter Property="FontFamily" Value="Arial" />
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="#FF326D91"/>
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="#FF266388" />
	</Style>
	
    <Style TargetType="ComboBox">
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="#FF326D91"/>
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="#FF266388" />
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton 
                            Name="ToggleButton" 
                            Template="{StaticResource ComboBoxToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter
                            Name="ContentSite"
                            IsHitTestVisible="False" 
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="5,4,14,2"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}" 
                            Template="{StaticResource ComboBoxTextBox}" 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" 
                            Margin="5,4,14,2"
                            Focusable="True" 
                            Background="Transparent"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
						<Popup
								Name="Popup"
                                Placement="Bottom"
                                IsOpen="{TemplateBinding IsDropDownOpen}"
                                AllowsTransparency="True" 
                                Focusable="False"
                                PopupAnimation="Slide">
							<Grid 
                                  Name="DropDown"
                                  SnapsToDevicePixels="True"                
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
								<Border 
                                    x:Name="DropDownBorder"
                                    Background="{StaticResource WindowBackgroundBrush}"
                                    BorderThickness="1"
                                    BorderBrush="{StaticResource SolidBorderBrush}">
									<Border.Effect>
										<DropShadowEffect Color="Black" Direction="315" Opacity="0.45" ShadowDepth="2" />
									</Border.Effect>
									<ScrollViewer Margin="1" SnapsToDevicePixels="True" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
										<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
									</ScrollViewer>
								</Border>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,0,2,2"/>
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility"    Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>
    
    
    <!-- Border -->
    <Style x:Key="FormBox" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="#FF8FB7D3" />
        <Setter Property="CornerRadius" Value="27.5,27.5,27.5,27.5"/>
    </Style>

	<Style x:Key="PopupBox" TargetType="{x:Type Border}">
		<Setter Property="Background" Value="#FF8FB7D3" />
		<Setter Property="BorderThickness" Value="2"/>
		<Setter Property="BorderBrush" Value="#FF266388"/>
		<Setter Property="CornerRadius" Value="27.5,27.5,27.5,27.5"/>
	</Style>


	<!-- Textbox -->
	<Style x:Key="FindTextBox" TargetType="{x:Type TextBoxBase}">
		<Setter Property="FontFamily" Value="Arial" />
		<Setter Property="FontSize" Value="20" />
		<Setter Property="Foreground" Value="#FF326D91" />
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="AllowDrop" Value="true"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TextBoxBase}">
					<Border 
						  Name="Border"
						  CornerRadius="2" 
						  Padding="2"
						  Background="White"
						  BorderBrush="#FF326D91"
						  BorderThickness="1" >
						<ScrollViewer Margin="4,0,0,0" x:Name="PART_ContentHost"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="Border" Property="Background" Value="#EEE"/>
							<Setter TargetName="Border" Property="BorderBrush" Value="#EEE"/>
							<Setter Property="Foreground" Value="#888"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<Style TargetType="{x:Type TextBox}">
		<Setter Property="FontFamily" Value="Arial" />
		<Setter Property="FontSize" Value="16" />
		<Setter Property="Foreground" Value="#FF326D91" />
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="AllowDrop" Value="true"/>
		<Setter Property="BorderBrush" Value="#FF326D91"/>
		<Setter Property="Background" Value="White"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TextBoxBase}">
					<Border 
						  Name="Border"
						  CornerRadius="2" 
						  Padding="2"
						  Background="{TemplateBinding Background}"
						  BorderBrush="{TemplateBinding BorderBrush}"
						  BorderThickness="1" >
						<ScrollViewer Margin="2,0,0,0" x:Name="PART_ContentHost"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="Border" Property="Background" Value="#EEE"/>
							<Setter TargetName="Border" Property="BorderBrush" Value="#EEE"/>
							<Setter Property="Foreground" Value="#888"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="MultiLineTextBox" TargetType="{x:Type TextBox}">
		<Setter Property="FontFamily" Value="Arial" />
		<Setter Property="FontSize" Value="12" />
		<Setter Property="Foreground" Value="#FF326D91" />
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="AllowDrop" Value="true"/>
		<Setter Property="BorderBrush" Value="#FF326D91"/>
		<Setter Property="Background" Value="White"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TextBoxBase}">
					<Border 
						  Name="Border"
						  CornerRadius="10" 
						  Padding="2"
						  Background="{TemplateBinding Background}"
						  BorderBrush="{TemplateBinding BorderBrush}"
						  BorderThickness="1" >
						<ScrollViewer Margin="2,0,0,0" x:Name="PART_ContentHost"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="Border" Property="Background" Value="#EEE"/>
							<Setter TargetName="Border" Property="BorderBrush" Value="#EEE"/>
							<Setter Property="Foreground" Value="#888"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<!-- TextBlock -->
	<Style x:Key="TextBlock_Topline" TargetType="{x:Type TextBlock}">
		<Setter Property="FontFamily" Value="Arial"/>
		<Setter Property="FontSize" Value="50"/>
		<Setter Property="Foreground" Value="#1E3966"/>
		<Setter Property="BitmapEffect">
			<Setter.Value>
					<OuterGlowBitmapEffect GlowColor="#C8DCEA" GlowSize="6"/>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="Arial" />
    </Style>
	<Style x:Key="HeaderTextBlock" TargetType="{x:Type TextBlock}">
		<Setter Property="TextWrapping" Value="Wrap"/>
		<Setter Property="FontFamily" Value="Arial" />
		<Setter Property="FontSize" Value="20" />
		<Setter Property="Foreground" Value="#FF266388" />
		<Setter Property="Padding" Value="0"/>
	</Style>
	<Style x:Key="HeaderBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontSize" Value="30"/>
        <Setter Property="Foreground" Value="White" />
    </Style>
	
	<!-- Groupbox -->
	<BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>
	<Style TargetType="{x:Type GroupBox}">
		<Setter Property="FontFamily" Value="Arial" />
		<Setter Property="FontSize" Value="12"/>
		<Setter Property="Foreground" Value="White" />
		<Setter Property="BorderBrush" Value="White" />
		<Setter Property="BorderThickness" Value="1.5"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type GroupBox}">
					<Grid SnapsToDevicePixels="true">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="28"/>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="6"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="*"/>
							<RowDefinition Height="6"/>
						</Grid.RowDefinitions>
						<Border Grid.Column="0" Grid.ColumnSpan="4" Grid.Row="1" Grid.RowSpan="3" Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4"/>
						<Border x:Name="Header" Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" Padding="6,1,6,0">
							<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentSource="Header" RecognizesAccessKey="True"/>
						</Border>
						<ContentPresenter Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="2"/>
						<Border Grid.ColumnSpan="4" Grid.Row="1" Grid.RowSpan="3" BorderBrush="White" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="26,26,26,26">
							<Border.OpacityMask>
								<MultiBinding Converter="{StaticResource BorderGapMaskConverter}" ConverterParameter="29">
									<Binding Path="ActualWidth" ElementName="Header"/>
									<Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}"/>
									<Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}"/>
								</MultiBinding>
							</Border.OpacityMask>
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Slider -->
	<Style x:Key="SliderEdge" TargetType="{x:Type RepeatButton}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Grid></Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ThumbBall" TargetType="{x:Type Thumb}">
		<Setter Property="SnapsToDevicePixels" Value="true"/>
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate>
					<Grid x:Name="TrackBall" Opacity="1">
						<Grid.Effect>
							<DropShadowEffect Direction="315" ShadowDepth="4" Opacity=".45"/>
						</Grid.Effect>
						<Border BorderThickness="2" CornerRadius="12" BorderBrush="Gray">
							<Border.Background>
								<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1" MappingMode="RelativeToBoundingBox">
									<GradientStop Color="#FF8FB7D3" Offset="0.0" />
									<GradientStop Color="#FF326D91" Offset="1.0" />
								</LinearGradientBrush>
							</Border.Background>
						</Border>
						<Ellipse x:Name="TrackLight" Opacity="0.5">
							<Ellipse.Fill>
								<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1" MappingMode="RelativeToBoundingBox">
									<GradientStop Color="#00FFFFFF" Offset="0.0" />
									<GradientStop Color="#30FFFFFF" Offset="0.1" />
									<GradientStop Color="#FFFFFFFF" Offset="1.0" />
								</LinearGradientBrush>
							</Ellipse.Fill>
						</Ellipse>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="TrackLight" Property="Opacity" Value="1"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="TrackBall" Property="Opacity" Value="0.5"/>
						</Trigger>
					</ControlTemplate.Triggers>

				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<Style x:Key="HSlider" TargetType="{x:Type Slider}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Slider}">
					<Grid>
						<Border VerticalAlignment="Center" Height="3" CornerRadius="3">
							<Border.Background>
								<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
									<GradientStop Color="#FF8FB7D3" Offset="0.0" />
									<GradientStop Color="#FFFFFFFF" Offset="0.5" />
									<GradientStop Color="#FF8FB7D3" Offset="1.0" />
								</LinearGradientBrush>
							</Border.Background>
						</Border>

						<Track Name="PART_Track" Visibility="Visible" VerticalAlignment="Center">
							<Track.DecreaseRepeatButton>
								<RepeatButton Style="{StaticResource SliderEdge}" Command="Slider.DecreaseLarge" />
							</Track.DecreaseRepeatButton>
							<Track.Thumb>
								<Thumb Margin="0,0,0,0" Width="12" Height="15" Style="{StaticResource ThumbBall}"/>
							</Track.Thumb>
							<Track.IncreaseRepeatButton>
								<RepeatButton Style="{StaticResource SliderEdge}"  Command="Slider.IncreaseLarge"/>
							</Track.IncreaseRepeatButton>
						</Track>
					</Grid>
				</ControlTemplate>

			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>